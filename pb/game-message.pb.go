// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: proto/game-message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Level int32

const (
	Level_UNSPECIFIED Level = 0
	Level_Easy        Level = 1
	Level_Medium      Level = 2
	Level_Hard        Level = 3
)

// Enum value maps for Level.
var (
	Level_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "Easy",
		2: "Medium",
		3: "Hard",
	}
	Level_value = map[string]int32{
		"UNSPECIFIED": 0,
		"Easy":        1,
		"Medium":      2,
		"Hard":        3,
	}
)

func (x Level) Enum() *Level {
	p := new(Level)
	*p = x
	return p
}

func (x Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Level) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_game_message_proto_enumTypes[0].Descriptor()
}

func (Level) Type() protoreflect.EnumType {
	return &file_proto_game_message_proto_enumTypes[0]
}

func (x Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Level.Descriptor instead.
func (Level) EnumDescriptor() ([]byte, []int) {
	return file_proto_game_message_proto_rawDescGZIP(), []int{0}
}

type UserAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*UserAction_GameRequest
	//	*UserAction_QuestionAnswer
	Action isUserAction_Action `protobuf_oneof:"action"`
}

func (x *UserAction) Reset() {
	*x = UserAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAction) ProtoMessage() {}

func (x *UserAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAction.ProtoReflect.Descriptor instead.
func (*UserAction) Descriptor() ([]byte, []int) {
	return file_proto_game_message_proto_rawDescGZIP(), []int{0}
}

func (m *UserAction) GetAction() isUserAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *UserAction) GetGameRequest() *GameRequest {
	if x, ok := x.GetAction().(*UserAction_GameRequest); ok {
		return x.GameRequest
	}
	return nil
}

func (x *UserAction) GetQuestionAnswer() *QuestionAnswer {
	if x, ok := x.GetAction().(*UserAction_QuestionAnswer); ok {
		return x.QuestionAnswer
	}
	return nil
}

type isUserAction_Action interface {
	isUserAction_Action()
}

type UserAction_GameRequest struct {
	GameRequest *GameRequest `protobuf:"bytes,1,opt,name=GameRequest,proto3,oneof"`
}

type UserAction_QuestionAnswer struct {
	QuestionAnswer *QuestionAnswer `protobuf:"bytes,2,opt,name=QuestionAnswer,proto3,oneof"`
}

func (*UserAction_GameRequest) isUserAction_Action() {}

func (*UserAction_QuestionAnswer) isUserAction_Action() {}

type QuestionAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer int32 `protobuf:"varint,1,opt,name=Answer,proto3" json:"Answer,omitempty"`
}

func (x *QuestionAnswer) Reset() {
	*x = QuestionAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionAnswer) ProtoMessage() {}

func (x *QuestionAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionAnswer.ProtoReflect.Descriptor instead.
func (*QuestionAnswer) Descriptor() ([]byte, []int) {
	return file_proto_game_message_proto_rawDescGZIP(), []int{1}
}

func (x *QuestionAnswer) GetAnswer() int32 {
	if x != nil {
		return x.Answer
	}
	return 0
}

type GameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level Level `protobuf:"varint,1,opt,name=Level,proto3,enum=guessthelogo.Level" json:"Level,omitempty"`
}

func (x *GameRequest) Reset() {
	*x = GameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRequest) ProtoMessage() {}

func (x *GameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRequest.ProtoReflect.Descriptor instead.
func (*GameRequest) Descriptor() ([]byte, []int) {
	return file_proto_game_message_proto_rawDescGZIP(), []int{2}
}

func (x *GameRequest) GetLevel() Level {
	if x != nil {
		return x.Level
	}
	return Level_UNSPECIFIED
}

type GameStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=GameId,proto3" json:"GameId,omitempty"`
	// Types that are assignable to Status:
	//	*GameStatus_StartStatus
	//	*GameStatus_Question
	//	*GameStatus_ResultStatus
	Status isGameStatus_Status `protobuf_oneof:"status"`
}

func (x *GameStatus) Reset() {
	*x = GameStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStatus) ProtoMessage() {}

func (x *GameStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStatus.ProtoReflect.Descriptor instead.
func (*GameStatus) Descriptor() ([]byte, []int) {
	return file_proto_game_message_proto_rawDescGZIP(), []int{3}
}

func (x *GameStatus) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (m *GameStatus) GetStatus() isGameStatus_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *GameStatus) GetStartStatus() *StartStatus {
	if x, ok := x.GetStatus().(*GameStatus_StartStatus); ok {
		return x.StartStatus
	}
	return nil
}

func (x *GameStatus) GetQuestion() *Question {
	if x, ok := x.GetStatus().(*GameStatus_Question); ok {
		return x.Question
	}
	return nil
}

func (x *GameStatus) GetResultStatus() *ResultStatus {
	if x, ok := x.GetStatus().(*GameStatus_ResultStatus); ok {
		return x.ResultStatus
	}
	return nil
}

type isGameStatus_Status interface {
	isGameStatus_Status()
}

type GameStatus_StartStatus struct {
	StartStatus *StartStatus `protobuf:"bytes,2,opt,name=StartStatus,proto3,oneof"`
}

type GameStatus_Question struct {
	Question *Question `protobuf:"bytes,3,opt,name=Question,proto3,oneof"`
}

type GameStatus_ResultStatus struct {
	ResultStatus *ResultStatus `protobuf:"bytes,4,opt,name=ResultStatus,proto3,oneof"`
}

func (*GameStatus_StartStatus) isGameStatus_Status() {}

func (*GameStatus_Question) isGameStatus_Status() {}

func (*GameStatus_ResultStatus) isGameStatus_Status() {}

type StartStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfQuestions int32 `protobuf:"varint,1,opt,name=NumberOfQuestions,proto3" json:"NumberOfQuestions,omitempty"`
	TimePerQueston    int32 `protobuf:"varint,2,opt,name=TimePerQueston,proto3" json:"TimePerQueston,omitempty"`
}

func (x *StartStatus) Reset() {
	*x = StartStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStatus) ProtoMessage() {}

func (x *StartStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStatus.ProtoReflect.Descriptor instead.
func (*StartStatus) Descriptor() ([]byte, []int) {
	return file_proto_game_message_proto_rawDescGZIP(), []int{4}
}

func (x *StartStatus) GetNumberOfQuestions() int32 {
	if x != nil {
		return x.NumberOfQuestions
	}
	return 0
}

func (x *StartStatus) GetTimePerQueston() int32 {
	if x != nil {
		return x.TimePerQueston
	}
	return 0
}

type ResultStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question []*Question `protobuf:"bytes,1,rep,name=Question,proto3" json:"Question,omitempty"`
	Ans      []int32     `protobuf:"varint,2,rep,packed,name=Ans,proto3" json:"Ans,omitempty"`
	Score    int32       `protobuf:"varint,3,opt,name=Score,proto3" json:"Score,omitempty"`
}

func (x *ResultStatus) Reset() {
	*x = ResultStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultStatus) ProtoMessage() {}

func (x *ResultStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultStatus.ProtoReflect.Descriptor instead.
func (*ResultStatus) Descriptor() ([]byte, []int) {
	return file_proto_game_message_proto_rawDescGZIP(), []int{5}
}

func (x *ResultStatus) GetQuestion() []*Question {
	if x != nil {
		return x.Question
	}
	return nil
}

func (x *ResultStatus) GetAns() []int32 {
	if x != nil {
		return x.Ans
	}
	return nil
}

func (x *ResultStatus) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Image []byte `protobuf:"bytes,2,opt,name=Image,proto3" json:"Image,omitempty"`
	// Types that are assignable to Type:
	//	*Question_ImageQuestion
	//	*Question_NameQuestion
	Type           isQuestion_Type `protobuf_oneof:"Type"`
	QuestionNumber int32           `protobuf:"varint,5,opt,name=QuestionNumber,proto3" json:"QuestionNumber,omitempty"`
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_proto_game_message_proto_rawDescGZIP(), []int{6}
}

func (x *Question) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Question) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (m *Question) GetType() isQuestion_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Question) GetImageQuestion() *ImageQuestion {
	if x, ok := x.GetType().(*Question_ImageQuestion); ok {
		return x.ImageQuestion
	}
	return nil
}

func (x *Question) GetNameQuestion() *NameQuestion {
	if x, ok := x.GetType().(*Question_NameQuestion); ok {
		return x.NameQuestion
	}
	return nil
}

func (x *Question) GetQuestionNumber() int32 {
	if x != nil {
		return x.QuestionNumber
	}
	return 0
}

type isQuestion_Type interface {
	isQuestion_Type()
}

type Question_ImageQuestion struct {
	ImageQuestion *ImageQuestion `protobuf:"bytes,3,opt,name=ImageQuestion,proto3,oneof"`
}

type Question_NameQuestion struct {
	NameQuestion *NameQuestion `protobuf:"bytes,4,opt,name=NameQuestion,proto3,oneof"`
}

func (*Question_ImageQuestion) isQuestion_Type() {}

func (*Question_NameQuestion) isQuestion_Type() {}

// select the Image (1 name string 4 images)
type ImageQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name   *LogoName `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Image1 *Logo     `protobuf:"bytes,3,opt,name=Image1,proto3" json:"Image1,omitempty"`
	Image2 *Logo     `protobuf:"bytes,4,opt,name=Image2,proto3" json:"Image2,omitempty"`
	Image3 *Logo     `protobuf:"bytes,5,opt,name=Image3,proto3" json:"Image3,omitempty"`
	Image4 *Logo     `protobuf:"bytes,6,opt,name=Image4,proto3" json:"Image4,omitempty"`
}

func (x *ImageQuestion) Reset() {
	*x = ImageQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageQuestion) ProtoMessage() {}

func (x *ImageQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageQuestion.ProtoReflect.Descriptor instead.
func (*ImageQuestion) Descriptor() ([]byte, []int) {
	return file_proto_game_message_proto_rawDescGZIP(), []int{7}
}

func (x *ImageQuestion) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ImageQuestion) GetName() *LogoName {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ImageQuestion) GetImage1() *Logo {
	if x != nil {
		return x.Image1
	}
	return nil
}

func (x *ImageQuestion) GetImage2() *Logo {
	if x != nil {
		return x.Image2
	}
	return nil
}

func (x *ImageQuestion) GetImage3() *Logo {
	if x != nil {
		return x.Image3
	}
	return nil
}

func (x *ImageQuestion) GetImage4() *Logo {
	if x != nil {
		return x.Image4
	}
	return nil
}

// selct the Name (1 Image 4 name strings)
type NameQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Image *Logo     `protobuf:"bytes,2,opt,name=Image,proto3" json:"Image,omitempty"`
	Name1 *LogoName `protobuf:"bytes,3,opt,name=Name1,proto3" json:"Name1,omitempty"`
	Name2 *LogoName `protobuf:"bytes,4,opt,name=Name2,proto3" json:"Name2,omitempty"`
	Name3 *LogoName `protobuf:"bytes,5,opt,name=Name3,proto3" json:"Name3,omitempty"`
	Name4 *LogoName `protobuf:"bytes,6,opt,name=Name4,proto3" json:"Name4,omitempty"`
}

func (x *NameQuestion) Reset() {
	*x = NameQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_game_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameQuestion) ProtoMessage() {}

func (x *NameQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameQuestion.ProtoReflect.Descriptor instead.
func (*NameQuestion) Descriptor() ([]byte, []int) {
	return file_proto_game_message_proto_rawDescGZIP(), []int{8}
}

func (x *NameQuestion) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NameQuestion) GetImage() *Logo {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *NameQuestion) GetName1() *LogoName {
	if x != nil {
		return x.Name1
	}
	return nil
}

func (x *NameQuestion) GetName2() *LogoName {
	if x != nil {
		return x.Name2
	}
	return nil
}

func (x *NameQuestion) GetName3() *LogoName {
	if x != nil {
		return x.Name3
	}
	return nil
}

func (x *NameQuestion) GetName4() *LogoName {
	if x != nil {
		return x.Name4
	}
	return nil
}

var File_proto_game_message_proto protoreflect.FileDescriptor

var file_proto_game_message_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67, 0x75, 0x65, 0x73,
	0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6c, 0x6f, 0x67, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x73, 0x74, 0x68,
	0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x46, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x73,
	0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x0b,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xe5, 0x01, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a,
	0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67,
	0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52,
	0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x08,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x73,
	0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x63,
	0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a,
	0x11, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x54,
	0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x73, 0x74, 0x68, 0x65,
	0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x41, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22,
	0xe7, 0x01, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x4e, 0x61, 0x6d,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x42, 0x06, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x0d, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x73, 0x74,
	0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x06, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x31, 0x12, 0x2a, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x32, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f,
	0x67, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x32, 0x12,
	0x2a, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x4c,
	0x6f, 0x67, 0x6f, 0x52, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x33, 0x12, 0x2a, 0x0a, 0x06, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x52,
	0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x34, 0x22, 0x80, 0x02, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x73, 0x74,
	0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f,
	0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x31,
	0x12, 0x2c, 0x0a, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x4c,
	0x6f, 0x67, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x12, 0x2c,
	0x0a, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x4c, 0x6f, 0x67,
	0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x33, 0x12, 0x2c, 0x0a, 0x05,
	0x4e, 0x61, 0x6d, 0x65, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x73, 0x74, 0x68, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x34, 0x2a, 0x38, 0x0a, 0x05, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x61, 0x73, 0x79, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x61,
	0x72, 0x64, 0x10, 0x03, 0x42, 0x24, 0x0a, 0x1b, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x50, 0x01, 0x5a, 0x03, 0x70, 0x62, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_game_message_proto_rawDescOnce sync.Once
	file_proto_game_message_proto_rawDescData = file_proto_game_message_proto_rawDesc
)

func file_proto_game_message_proto_rawDescGZIP() []byte {
	file_proto_game_message_proto_rawDescOnce.Do(func() {
		file_proto_game_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_game_message_proto_rawDescData)
	})
	return file_proto_game_message_proto_rawDescData
}

var file_proto_game_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_game_message_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_game_message_proto_goTypes = []interface{}{
	(Level)(0),             // 0: guessthelogo.Level
	(*UserAction)(nil),     // 1: guessthelogo.UserAction
	(*QuestionAnswer)(nil), // 2: guessthelogo.QuestionAnswer
	(*GameRequest)(nil),    // 3: guessthelogo.GameRequest
	(*GameStatus)(nil),     // 4: guessthelogo.GameStatus
	(*StartStatus)(nil),    // 5: guessthelogo.StartStatus
	(*ResultStatus)(nil),   // 6: guessthelogo.ResultStatus
	(*Question)(nil),       // 7: guessthelogo.Question
	(*ImageQuestion)(nil),  // 8: guessthelogo.ImageQuestion
	(*NameQuestion)(nil),   // 9: guessthelogo.NameQuestion
	(*LogoName)(nil),       // 10: guessthelogo.LogoName
	(*Logo)(nil),           // 11: guessthelogo.Logo
}
var file_proto_game_message_proto_depIdxs = []int32{
	3,  // 0: guessthelogo.UserAction.GameRequest:type_name -> guessthelogo.GameRequest
	2,  // 1: guessthelogo.UserAction.QuestionAnswer:type_name -> guessthelogo.QuestionAnswer
	0,  // 2: guessthelogo.GameRequest.Level:type_name -> guessthelogo.Level
	5,  // 3: guessthelogo.GameStatus.StartStatus:type_name -> guessthelogo.StartStatus
	7,  // 4: guessthelogo.GameStatus.Question:type_name -> guessthelogo.Question
	6,  // 5: guessthelogo.GameStatus.ResultStatus:type_name -> guessthelogo.ResultStatus
	7,  // 6: guessthelogo.ResultStatus.Question:type_name -> guessthelogo.Question
	8,  // 7: guessthelogo.Question.ImageQuestion:type_name -> guessthelogo.ImageQuestion
	9,  // 8: guessthelogo.Question.NameQuestion:type_name -> guessthelogo.NameQuestion
	10, // 9: guessthelogo.ImageQuestion.Name:type_name -> guessthelogo.LogoName
	11, // 10: guessthelogo.ImageQuestion.Image1:type_name -> guessthelogo.Logo
	11, // 11: guessthelogo.ImageQuestion.Image2:type_name -> guessthelogo.Logo
	11, // 12: guessthelogo.ImageQuestion.Image3:type_name -> guessthelogo.Logo
	11, // 13: guessthelogo.ImageQuestion.Image4:type_name -> guessthelogo.Logo
	11, // 14: guessthelogo.NameQuestion.Image:type_name -> guessthelogo.Logo
	10, // 15: guessthelogo.NameQuestion.Name1:type_name -> guessthelogo.LogoName
	10, // 16: guessthelogo.NameQuestion.Name2:type_name -> guessthelogo.LogoName
	10, // 17: guessthelogo.NameQuestion.Name3:type_name -> guessthelogo.LogoName
	10, // 18: guessthelogo.NameQuestion.Name4:type_name -> guessthelogo.LogoName
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_game_message_proto_init() }
func file_proto_game_message_proto_init() {
	if File_proto_game_message_proto != nil {
		return
	}
	file_proto_logo_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_game_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_game_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_game_message_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*UserAction_GameRequest)(nil),
		(*UserAction_QuestionAnswer)(nil),
	}
	file_proto_game_message_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*GameStatus_StartStatus)(nil),
		(*GameStatus_Question)(nil),
		(*GameStatus_ResultStatus)(nil),
	}
	file_proto_game_message_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Question_ImageQuestion)(nil),
		(*Question_NameQuestion)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_game_message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_game_message_proto_goTypes,
		DependencyIndexes: file_proto_game_message_proto_depIdxs,
		EnumInfos:         file_proto_game_message_proto_enumTypes,
		MessageInfos:      file_proto_game_message_proto_msgTypes,
	}.Build()
	File_proto_game_message_proto = out.File
	file_proto_game_message_proto_rawDesc = nil
	file_proto_game_message_proto_goTypes = nil
	file_proto_game_message_proto_depIdxs = nil
}
